1번
#include <stdio.h>
#include <stdlib.h>
#pragma warning(disable:4996)

int main()
{
	int A[100][100], B[100][100], C[100][100];
	int A_r, A_c, B_r, B_c;
	int i, j, k, sum=0;
	scanf("%d %d", &A_r, &A_c);
	scanf("%d %d", &B_r, &B_c);

	for (i = 0; i < A_r; i++)
		for (j = 0; j < A_c; j++)
			scanf("%d", &A[i][j]);

	for (i = 0; i < B_r; i++)
		for (j = 0; j < B_c; j++)
			scanf("%d", &B[i][j]);

	for (i = 0; i < B_c; i++) {
		for (j = 0; j < A_r; j++) {
			for (k = 0; k < A_c; k++)
				sum += A[j][k] * B[k][i];
			C[i][j] = sum;
			sum = 0;
		}
	}

	
	for (i = 0; i < B_c; i++) {
		for (j = 0; j < A_r; j++)
			printf(" %d", C[i][j]);
		printf("\n");
	}
	return 0;
}



2번
#include <stdio.h>
#include <stdlib.h>
#pragma warning(disable:4996)
void triangle(int X[][100], int N, int X_s, int X_e, int Y_s, int Y_e, int i, int f);

int main()
{
	int X[100][100];
	int N, cnt, f, i, j;
	cnt = f = 1;
	scanf("%d", &N);

	triangle(X, N, 0, N - 1, 0, N - 1, cnt, f);

	for (i = 0; i < N; i++) {
		for (j = 0; j <= i; j++)		//출력할 때 j<i로 하니까 당연히 안 나오지 => 계단식 출력할 때 j<=i인거 조심
			printf("%d ", X[i][j]);
		printf("\n");
	}
	return 0;
}
void triangle(int X[][100], int N, int X_s, int X_e, int Y_s, int Y_e, int i, int f) {	//어떤 경우의 수가 나오든 무조건 X,Y의 시작점 + 끝점만 살펴볼 것. Zx zy 이지랄ㄴㄴ
				//차피 원리는 하나다
	int x, y;
	if (i > N * (N + 1) / 2)
		return;

	if (f == 1) {
		for (x = X_s, y = Y_s; x <= X_e; x++, y++) 
			X[y][x] = i++;
		f = 2;
		triangle(X, N , X_e-1, X_s, Y_s, Y_e, i, f);	//시작-끝 순서바꾸는건 문제마다 달라짐. 그냥 웬만하면 다음 경우의수로 넘어갈 때만 역순이랑 +- 같이 넣어줄 것.
				//언제는 순서바꾸고 언제는 안 바꾸고 이게 더 헷갈림 그냥 다음 경우의 수 때 둘다 결정
	}

	else if (f == 2) {
		for (x = X_s; x >= X_e; x--) 
			X[Y_e][x] = i++;
		f = 3;
		triangle(X, N, X_s, X_e, Y_e-1, Y_s+1, i, f);
	}

	else if (f == 3) {
		for (y = Y_s; y >= Y_e; y--) 
			X[y][X_e] = i++;
		f = 1;
		triangle(X, N, X_e+1, X_s-1, Y_e+1, Y_s, i, f);
	}
}

